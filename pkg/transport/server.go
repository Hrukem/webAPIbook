package transport

import (
	"fmt"
	httpSwagger "github.com/swaggo/http-swagger"
	_ "golang_ninja/webAPIbook/cmd/webAPIbook/docs" // docs is generated by Swag CLI, you have to import it.
	"golang_ninja/webAPIbook/config"
	"golang_ninja/webAPIbook/pkg/process"
	"golang_ninja/webAPIbook/pkg/storage"
	"log"
	"net/http"
)

type T struct {
	DbServer *storage.DB
	Trnsprt
	process.Proc
}

// Server function start server
func Server() error {
	DbServer, err := storage.NewDb()
	if err != nil {
		log.Println("error create database: ", err)
		return err
	}

	t := &T{DbServer, Trnsprt{}, process.Proc{}}

	http.HandleFunc("/books", t.GetAll)
	http.HandleFunc("/book", t.Post)
	http.HandleFunc("/book/", t.MethodSwitch)

	http.HandleFunc(
		"/swagger/",
		httpSwagger.Handler(
			httpSwagger.URL(
				"http://localhost:4004/swagger/doc.json",
			),
		),
	)

	fmt.Println("start server on port", config.Cfg.Port)
	err = http.ListenAndServe(config.Cfg.Port, nil)
	if err != nil {
		log.Println("error server", err)
	}
	return nil
}
